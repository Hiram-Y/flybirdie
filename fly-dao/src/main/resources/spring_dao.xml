<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!--  使用注释事务 -->
<!--    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
 -->   <!-- 数据源在 ucf.properties 中配置 -->
   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
      <!--   连接池中保留的最小连接数 -->
        <property name="minPoolSize" value="${c3p0.minPoolSize}"></property>
 <!--        连接池中保留的最大连接数 -->
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>
  <!--       初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间 -->
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property>
       <!--  当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"></property>
<!--         检查所有连接池中的空闲连接的时间间隔(秒)
 -->        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"></property>
<!--         从数据库获取新连接失败后重复尝试的次数
 -->        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"></property>
<!--         c3p0将建一张名为"${c3p0.automaticTestTable}"的空表，并使用其自带的查询语句进行测试。你不能在这张表上进行任何操作
 -->        <property name="automaticTestTable" value="${c3p0.automaticTestTable}"></property>
    </bean> 
    
       <!--JDBC级别的事务管理器-->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> 

    <!-- 集成MyBatis -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    <property name="configLocation" value="classpath:/mybatis/mybatis_config.xml" />
        <property name="mapperLocations" value="classpath:/mybatis/mappers/*.xml"/> 
    </bean> 

   <!-- 集成Hibernate -->
  <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mappingLocations">
            <list>
                <value>classpath*:/hibernate/**/*.hbm.xml</value>
            </list>
        </property>
        <property name="lobHandler" ref="lobHandler" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
           <!--      <prop key="hibernate.query.factory_class">${hibernate.query.factory_class}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop> -->
            </props>
        </property>
        <property name="useTransactionAwareDataSource" value="true" />
    </bean> 

   <bean id="nativeJdbcExtractor" lazy-init="true"
        class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor">
    </bean>

 <bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
        <property name="nativeJdbcExtractor">
            <ref bean="nativeJdbcExtractor" />
        </property>
    </bean>  

</beans>